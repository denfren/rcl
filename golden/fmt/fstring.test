let x = f"This f-string has {
  "a hole"
} inside it.";

let y = f"This f-string has {
[
// A list with a comment.
"in a hole"
]
} inside it.";

// The next one is a regression test; a bug would drop the content after the
// hole.
let k =
  f"""
  {0}t""";

let z0 = f"This string \n has an {"escape"} sequence \u{1F574} in it.";
let z1 = f"""
  As does
  \t this one.
  {"^ Tab above."}
  """;

// Here we have a comment inside the hole, which makes it multi-line.
let hole1 = f"Beware: {
// A comment
0
}";
let hole1 = f"""
This one has a blank line instead: {

0
}""";

f"""
This { let strtype = "f"; strtype }-string has a hole too.
"""

# output:
let x = f"This f-string has {"a hole"} inside it.";

let y = f"This f-string has {
  [
    // A list with a comment.
    "in a hole",
  ]
} inside it.";

// The next one is a regression test; a bug would drop the content after the
// hole.
let k =
  f"""
  {0}t""";

let z0 = f"This string \n has an {"escape"} sequence \u{1F574} in it.";
let z1 =
  f"""
  As does
  \t this one.
  {"^ Tab above."}
  """;

// Here we have a comment inside the hole, which makes it multi-line.
let hole1 = f"Beware: {
  // A comment
  0
}";
let hole1 =
  f"""
  This one has a blank line instead: {

    0
  }""";

f"""
This {let strtype = "f"; strtype}-string has a hole too.
"""
