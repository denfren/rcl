// This example is not minimal, the error would also trigger without the second
// argument of type `Int`, but we add it to cover the more tricky error
// reporting case of having an error and a non-error in the argument list.
let f: (Int, Int) -> Bool = (x, y) => true;
let g: (String, Int) -> Bool = f;
null

# output:
stdin:5:32
  ╷
5 │ let g: (String, Int) -> Bool = f;
  ╵                                ^
Error: Type mismatch inside this type:

  (<E1>, Int) -> Bool

At E1: Expected Int but found String.

stdin:4:9
  ╷
4 │ let f: (Int, Int) -> Bool = (x, y) => true;
  ╵         ^~~
Note: Expected Int because of this annotation.
