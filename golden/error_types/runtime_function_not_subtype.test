// Define a function with a static type, then forget the type.
let f: (Any) -> Int = x => 0;
let g: Any = f;
// Now we have to do a runtime check.
// It fails, because Bool is not a subtype of Int.
// TODO: Implement the pretty-printing of the TypeDiff.
let h: (Any) -> Bool = g;
null

# output:
stdin:7:24
  ╷
7 │ let h: (Any) -> Bool = g;
  ╵                        ^
Error: Type mismatch in type. TODO: Pretty-print: Function([Ok(FunctionArg { name: Some(x), span: None, type_: SourcedType { type_: Any, source: Annotation(d0[262..265]) } })], Error(Atom(SourcedType { type_: Int, source: Annotation(d0[79..82]) }, SourcedType { type_: Bool, source: Annotation(d0[270..274]) })))
